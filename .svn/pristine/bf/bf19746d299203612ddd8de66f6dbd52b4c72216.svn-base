/*
 * TCSS 305 May 29, 2013 
 */
package view;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;

import javax.swing.JCheckBoxMenuItem;
import javax.swing.JFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;

import model.Board;

/**
 * The MenuBar is an object that creates a menu bar at the top of the frame.
 * The MenuBar consists of a file menu and a help menu.
 *
 * @author Casey Morrison
 * @version May 29, 2013
 */
@SuppressWarnings("serial")
public class MenuBar extends JMenuBar {
  
  /** The file drop down menu. */
  private final JMenu my_filemenu = new JMenu("File");
  
  /** The options drop down menu. */
  private final JMenu my_optionsmenu = new JMenu("Options");
  
  /** The help drop down menu. */
  private final JMenu my_helpmenu = new JMenu("Help");
  
  /** The quit button. */
  private final JMenuItem my_quit_button = new JMenuItem("Quit", 'q');
  
  /** The new game button. */
  private final JMenuItem my_new_game_button = new JMenuItem("New Game", 'N');
  
  /** The pause button. */
  private final JMenuItem my_pause_button = new JMenuItem("Pause", 'p');
  
  /** The instructions button. */
  private final JMenuItem my_instructions = new JMenuItem("Instructions", 'I');
  
  /** The board panel used to draw the game and restart the game. */
  private final BoardPanel my_board_panel;

  /** The board used for restarting the game when you click new game in the file menu. */
  private final Board my_board;

  /**
   * Sets up the Menu bar.
   * @param the_frame - the frame this bar is attached to.
   * @param the_board_panel - draws the game to play Tetris.
   * @param the_board - the board used to restart the game in this menu.
   */
  public MenuBar(final JFrame the_frame, final BoardPanel the_board_panel,
                 final Board the_board) {
    super();
    my_board = the_board;
    my_board_panel = the_board_panel;
    my_quit_button.addActionListener(new ActionListener() {
      public void actionPerformed(final ActionEvent the_event) {
        the_frame.dispose();
      }
    });
    setupFileMenu();
    setupOptionsMenu();
    setupHelpMenu();
    
    add(my_filemenu);
    add(my_optionsmenu);
    add(my_helpmenu);
  }

  /** 
   * Sets up the file menu.
   * The new game button resets the game.
   * The pause button pauses the game.
   * The exit button exits the program.
   */
  private void setupFileMenu() {
    my_filemenu.setMnemonic(KeyEvent.VK_F);
    
    my_new_game_button.addActionListener(new ActionListener() {
      public void actionPerformed(final ActionEvent the_event) {
        my_board.newGame(my_board.getWidth(), my_board.getHeight(), my_board.getPieceList());
        my_board_panel.reset();
      }
    });
    my_filemenu.add(my_new_game_button);
    
    my_pause_button.addActionListener(new ActionListener() {
      public void actionPerformed(final ActionEvent the_event) {
        my_board_panel.pause();
      }
    });
    my_filemenu.add(my_pause_button);
    my_filemenu.addSeparator();
    my_filemenu.add(my_quit_button);
  }
  
  /** 
   * Sets up the options menu.
   * The grid button sets the grid visible or not visible.
   */
  private void setupOptionsMenu() {
    my_optionsmenu.setMnemonic(KeyEvent.VK_O);
    
    final JCheckBoxMenuItem grid = new JCheckBoxMenuItem("Grid");
    grid.setMnemonic(KeyEvent.VK_G);
    grid.addActionListener(new ActionListener() { 
      public void actionPerformed(final ActionEvent the_event) {
        if (grid.getState()) {
          my_board_panel.setGrid(true);
          my_board_panel.repaint();
        } else {
          my_board_panel.setGrid(false);
          my_board_panel.repaint();
        }
      }
    });
   
    my_optionsmenu.add(grid);
  }
  
  /** 
   * Sets up the help menu.
   * The about button has a short description about the making of the game.
   * The instructions button tells you how to play the game.
   */
  private void setupHelpMenu() {
    my_helpmenu.setMnemonic(KeyEvent.VK_H);

    final JMenuItem about = new JMenuItem("About...", 'A');
    about.addActionListener(new ActionListener() { 
      public void actionPerformed(final ActionEvent the_event) {
        my_board_panel.pause();
        JOptionPane.showMessageDialog(null, "Implemented by:\n\n Casey Morrison, 5/29/2013.", 
                                      "About", JOptionPane.INFORMATION_MESSAGE);
        my_board_panel.pause();
      }
    });
    setupInstructions();
    my_helpmenu.add(my_instructions);
    my_helpmenu.addSeparator();
    my_helpmenu.add(about);
  }
  
  /**
   * Sets up the instructions in the help menu.
   * Tells you how to play the game.
   */
  private void setupInstructions() {
    my_instructions.addActionListener(new ActionListener() { 
      public void actionPerformed(final ActionEvent the_event) {
        my_board_panel.pause();
        final String str = new String("Move Left: A\nMove Right: D\nMove Down: S\n"
            + "Rotate: W\nDrop: Space Bar\nPause: P");
        JOptionPane.showMessageDialog(null, str, "How to play: ",
                                      JOptionPane.INFORMATION_MESSAGE);
        my_board_panel.pause();
      }
    });
  }
}
